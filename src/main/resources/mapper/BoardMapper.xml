<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.mygumi.insider.mapper.BoardMapper">

	<!-- 게시글 목록 출력 -->
	<select id="getBoards" resultType="boardDto">
		SELECT boardNo, title, hit, folder, saveName, originName, LEFT(content, 20) content,
		CASE
			WHEN HOUR(TIMEDIFF(NOW(), createDate)) <![CDATA[ <= ]]> 1 THEN
				CONCAT(MINUTE(TIMEDIFF(NOW(), createDate)), '분 전')
			WHEN HOUR(TIMEDIFF(NOW(), createDate)) <![CDATA[ <= ]]> 24 THEN
				CONCAT(HOUR(TIMEDIFF(NOW(), createDate)), '시간 전')
			ELSE DATE_FORMAT(createDate, '%Y-%m-%d')
			END AS createDate
		FROM board
		WHERE status = 1
		ORDER BY boardNo DESC;
	</select>
	
	<!-- 조회수 하나 늘리기 -->
	<update id="updateHit" parameterType="Int">
		UPDATE board
		SET hit = hit + 1
		WHERE boardNo = #{boardNo};
	</update>
	
	<!-- 게시글 상세 내용 출력 -->
	<select id="getBoardDetail" parameterType="Int" resultType="boardDto">
		SELECT boardNo, title, content, hit, writerId, folder, saveName, originName, likeStatus,
		CASE
			WHEN HOUR(TIMEDIFF(NOW(), createDate)) <![CDATA[ <= ]]> 1 THEN
				CONCAT(MINUTE(TIMEDIFF(NOW(), createDate)), '분 전')
			WHEN HOUR(TIMEDIFF(NOW(), createDate)) <![CDATA[ <= ]]> 24 THEN
				CONCAT(HOUR(TIMEDIFF(NOW(), createDate)), '시간 전')
			ELSE DATE_FORMAT(createDate, '%Y-%m-%d')
			END AS createDate,
		CASE
			WHEN HOUR(TIMEDIFF(NOW(), updateDate)) <![CDATA[ <= ]]> 1 THEN
				CONCAT(MINUTE(TIMEDIFF(NOW(), updateDate)), '분 전')
			WHEN HOUR(TIMEDIFF(NOW(), updateDate)) <![CDATA[ <= ]]> 24 THEN
				CONCAT(HOUR(TIMEDIFF(NOW(), updateDate)), '시간 전')
			ELSE DATE_FORMAT(updateDate, '%Y-%m-%d')
			END AS updateDate
		FROM board
		WHERE boardNo = #{boardNo};
	</select>
	
	<!-- 게시글의 좋아요 수 가져오기 -->
	<select id="getLikesNum" parameterType="Int" resultType="Int">
		SELECT COUNT(*)
		FROM likes
		WHERE boardNo = #{boardNo};
	</select>
	
	<!-- 게시글의 댓글 출력 -->
	<select id="getComments" parameterType="Int" resultType="commentDto">
		SELECT commentNo, content, writerName, writerId, status,
		CASE
			WHEN HOUR(TIMEDIFF(NOW(), createDate)) <![CDATA[ <= ]]> 1 THEN
				CONCAT(MINUTE(TIMEDIFF(NOW(), createDate)), '분 전')
			WHEN HOUR(TIMEDIFF(NOW(), createDate)) <![CDATA[ <= ]]> 24 THEN
				CONCAT(HOUR(TIMEDIFF(NOW(), createDate)), '시간 전')
			ELSE DATE_FORMAT(createDate, '%Y-%m-%d')
			END AS createDate
		FROM comment
		WHERE boardNo = #{boardNo};
	</select>
	
	<!-- 게시글의 대댓글 출력 -->
	<select id="getReplys" parameterType="Int" resultType="replyCommentDto">
		SELECT replyNo, commentNo, content, writerName, writerId,
		CASE
			WHEN HOUR(TIMEDIFF(NOW(), createDate)) <![CDATA[ <= ]]> 1 THEN
				CONCAT(MINUTE(TIMEDIFF(NOW(), createDate)), '분 전')
			WHEN HOUR(TIMEDIFF(NOW(), createDate)) <![CDATA[ <= ]]> 24 THEN
				CONCAT(HOUR(TIMEDIFF(NOW(), createDate)), '시간 전')
			ELSE DATE_FORMAT(createDate, '%Y-%m-%d')
			END AS createDate
		FROM reply
		WHERE boardNo = #{boardNo} AND status = 1
		ORDER BY commentNo, replyNo;
	</select>
	
	<!-- 게시글 작성 -->
	<insert id="writeBoard" parameterType="boardDto">
		INSERT INTO board(title, content, createDate, writerId, writerName, folder, originName, saveName)
		VALUES(#{title}, #{content}, NOW(), #{writerId}, #{writerName}, #{folder}, #{originName}, #{saveName});
	</insert>
	
	<!-- 댓글 작성 -->
	<insert id="writeComment" parameterType="commentDto">
		INSERT INTO comment(boardNo, content, createDate, writerId, writerName)
		VALUES(#{boardNo}, #{content}, NOW(), #{writerId}, #{writerName});
	</insert>
	
	<!-- 대댓글 작성 -->
	<insert id="writeReply" parameterType="replyCommentDto">
		INSERT INTO reply(commentNo, boardNo, content, createDate, writerId, writerName)
		VALUES(#{commentNo}, #{boardNo}, #{content}, NOW(), #{writerId}, #{writerName})
	</insert>
	
	<!-- 게시물 수정 -->
	<update id="modifyBoard" parameterType="boardDto">
		UPDATE board
		SET title = #{title}, content=#{content}, update_at = NOW()
		WHERE boardNo = #{boardNo}
	</update>
	
	<!-- 댓글 수정 -->
	<update id="modifyComment" parameterType="commentDto">
		UPDATE comment
		SET content=#{content}, update_at = NOW()
		WHERE commentNo = #{commentNo}
	</update>
	
	<!-- 대댓글 수정 -->
	<update id="replyComment" parameterType="replyCommentDto">
		UPDATE reply
		SET content=#{content}, update_at = NOW()
		WHERE replyNo = #{replyNo}
	</update>
	
	<!-- 게시물 삭제 -->
	<update id="deleteBoard" parameterType="String">
		UPDATE board
		SET status = 0
		WHERE boardNo = #{boardNo}
	</update>
	
	<!-- 댓글 삭제 -->
	<update id="deleteComment" parameterType="String">
		UPDATE comment
		SET status = 0
		WHERE commentNo = #{commentNo}
	</update>
	
	<!-- 대댓글 삭제 -->
	<update id="deleteReply" parameterType="String">
		UPDATE reply
		SET status = 0
		WHERE replyNo = #{replyNo}
	</update>
	
</mapper>